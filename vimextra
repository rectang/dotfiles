" Vim not vi.
set nocompatible

" Show syntax highlighting.
syntax enable

" Use filetype-specific indentation, via $DIR/indent/$FILETYPE.vim
"filetype plugin indent on

" Use smartindent.
set smartindent

" Show line numbers.
set number

" Choose syntax colors that work well on a light background.
set bg=light

" Allow backspacing over anything.
set backspace=indent,eol,start

" Case-insensitive regexes.
set ignorecase

" Wrap long lines.
set wrap

" <tab> autocompletion of directories.
set wildchar=<tab>

" Highlight matches after a search.
set hlsearch

" Incremental search -- start as soon as the first character is typed.
set incsearch

" Highlight matching brackets as the cursor passes over them.
set showmatch

" Always show the status bar at the bottom of the screen.
set laststatus=2

" Show line, column, %-complete stats in status bar.
set ruler

" Set the font used by gvim (Mac OS X only);
set guifont=Menlo:h13

" Recognize .rs as Rust.
autocmd BufNewFile,BufRead *.rs set filetype=rust

" Automatically recognize .pm, .plx, .t files as perl
autocmd BufNewFile,BufRead *.plx set filetype=perl
autocmd BufNewFile,BufRead *.pm set filetype=perl
autocmd BufNewFile,BufRead *.t set filetype=perl

" Recognize .mdtext, .md, .mdown as Markdown.
autocmd BufNewFile,BufRead *.mdtext set filetype=markdown
autocmd BufNewFile,BufRead *.md set filetype=markdown
autocmd BufNewFile,BufRead *.mdown set filetype=markdown

" Recognize .cfh as Clownfish
autocmd BufNewFile,BufRead *.cfh set filetype=clownfish

" Recognize .go as Go.
autocmd BufNewFile,BufRead *.go set filetype=go

" Use "visual bell" instead of the annoying "audio blink".
set vb

" Make the backspace key behave the same across different terminals.
set t_kb=ctrl-vBACKSPACE

" Set t_kD (the delete key) to the value of t_kb so that delete and backspace
" work the same.
fixdel 

" Allow cursor keys plus h, l to wrap when used at the beginning or end of a line.
" <> are cursor keys in normal and visual mode.
" [] are cursor keys in insert mode.
set whichwrap=b,s,<,>,[,],h,l

" Make backspace treat 4 spaces as a tab.
set softtabstop=4

" Have <tab> key type spaces.
set expandtab

" Disable expandtab for Makefiles and Go files.
autocmd FileType make setlocal noexpandtab
autocmd FileType go setlocal noexpandtab

" Display tabs as four spaces
set tabstop=4

" Have automatic indentation work like tabs.
set shiftwidth=4

" Wrap lines at 78 characters.
set textwidth=78

" Use a narrower width for commit messages so that `git log` looks good.
autocmd FileType gitcommit,svn setlocal textwidth=72

" Use 2-space indent for HTML, JavaScript, Java, Ruby.
autocmd FileType html,javascript,java,ruby setlocal shiftwidth=2
autocmd FileType html,javascript,java,ruby setlocal softtabstop=2
autocmd FileType html,javascript,java,ruby setlocal tabstop=2

" Default to UTF-8.
set encoding=utf-8

" Remap movement keys to a more ergonomic 'inverted-T' configuration.  Then
" set `e` and `E` to enter insertion mode (think 'edit') since `i` has been
" used for movement.
noremap i <Up>
noremap j <Left>
noremap k <Down>
noremap l <Right>
noremap e <insert>
noremap E ^<insert>
noremap h b
noremap ; w

" Make carat easier to type.
inoremap <C-a> ^

" Remove the touchbar menu, especially the full-page key which I always hit
" accidentally because it's next to the <ESCAPE> key.
let g:macvim_default_touchbar_fullscreen=0
if has("gui_macvim")
  " Remove Vim buttons from the Touch Bar.
  aunmenu TouchBar.
endif

" Allow for per-repository vimrc files.
"
" If we're in a git repository, AND there is a file named `.marvimrc` in
" the root directory of the repository, AND that file is not committed,
" then it must be a vimrc file that I put there and it's safe to load.
let git_path = system("git rev-parse --show-toplevel 2>/dev/null")
if !empty(git_path)
    let marvimrc = substitute(git_path, '\n', '', '') . "/.marvimrc"
    if !empty(glob(marvimrc))
        let marvimrc_log = system("git log " . marvimrc)
        if empty(marvimrc_log)
            exec ":source " . marvimrc
        endif
    endif
endif
